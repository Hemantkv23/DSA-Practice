https://datalemur.com/questions/python-merge-conflicts

Imagine you are working on a code version-control system website, similar to GitHub.
You are given a list of pull_requests, and each element within the list represents a range of lines which that were changed in a specific pull request.
Your job is to write a function called has_merge_conflict which returns True or False, depending on if there is or is not any merge conflict. In this case, a merge conflict means two different pull requests are trying to change the same exact lines.
For example, if you were given the input pull_requests = [[5, 10], [15, 40], [25, 50]].
We'd output True because there is a merge conflict: two different pull requests trying to change lines between 25 and 40.
Here's another example: say you had the input pull_requests = [[30, 40], [10, 20], [5, 8]].
You'd return False because there is no merge conflict â€“ none of these pull requests are trying to change the same lines.

Solution - 
def sort(input):
  for i in range(0, len(input)):
    for j in range(0, len(input)-1-i) :
      if input[j+1][0] < input[j][0]:
        input[j+1] , input[j] = input[j], input[j+1]
  return input
      
def has_merge_conflict(pull_requests)-> bool:
  input = sort(pull_requests)
  print(input)
  for i in range(0, len(input)-1):
    if input[i][1]>input[i+1][0] & input[i][1]<input[i+1][1]:
      return True  
  return False
